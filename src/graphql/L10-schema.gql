type Meeting {
  Id: Int @examples(values: [493])
  Type: String @examples(values: ["AngularRecurrence"])
  Key: String @examples(values: ["AngularRecurrence_493"])
  CreateTime: String @examples(values: ["2019-11-08T03:18:21"])
  CreatedBy: User
  Basics: Settings
  Attendees: [User] @listLength(min: 0, max: 5)
  Scorecard: Scorecard
  Notes: [MeetingNotes] @listLength(min: 0, max: 5)
  Rocks: [Rock] @listLength(min: 0, max: 5)
  Todos: [Todo] @listLength(min: 0, max: 5)
  Milestones: [Todo] @listLength(min: 0, max: 5)
  Headlines: [Headline] @listLength(min: 0, max: 5)
  IssuesList: IssuesList
  HeadlinesUrl: String @examples(values: "https://notes.traction.tools/p/49cc99ce-4913-4306-9f4b-ec7f28c8cc54?showControls=true&amp;showChat=false")
  HeadlineType: String @examples(values: ["None", "HeadlinesBox", "HeadlinesList"])
  VtoId: Int @examples(values: 493)
  Pages: [Page] @listLength(min: 0, max: 5)
  MeetingType: String @examples(values: ["L10", "SamePage"])
}

type User {
  Id: Int @examples(values: 605)
  Type: String @examples(values: "AngularUser")
  Key: String @examples(values: "AngularUser_605")
  Name: String @examples(values: "Danilo Zabala")
  ImageUrl: String @examples(values: "/i/userplaceholder")
}

type Settings {
  Id: Int @examples(values: 493)
  Type: String @examples(values: "AngularBasics")
  Key: String @examples(values: "AngularBasics_493")
  Name: String @examples(values: "Test Meeting #1")
  TeamType: String @examples(values: ["LeadershipTeam", "DepartmentalTeam", "SamePageMeeting", "Other"])
}

type Scorecard {
  Id: Int @examples(values: 493)
  Type: String @examples(values: "AngularScorecard")
  Key: String @examples(values: "AngularScorecard_493")
  MeasurableOrder: [MeasurableOrder] @listLength(min: 0, max: 5)
  Measurables: [Measurable] @listLength(min: 0, max: 5)
  Scores: [Score] @listLength(min: 0, max: 5)
  Weeks: [Week]
  ReverseScorecard: Boolean 
  ScorecardWeekDay: String @examples(values: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"])
  Period: String @examples(values: "Weekly")
  DateFormat1: String @examples(values: "MMM d")
  DateFormat2: String @examples(values: "MMM d")
}

type MeasurableOrder {
  Id: String @examples(values: ["493_1060", "493_1061"])
  Type: String @examples(values: "AngularMeasurableOrder")
  ScorecardId: Int @examples(values: 493)
  MeasurableId: Int @examples(values: [1060, 1061])
  Ordering: Int @examples(values: [0, 1])
  Key: String @examples(values: ["AngularMeasurableOrder_493_1060", "AngularMeasurableOrder_493_1061"])
}

type Measurable {
  Name: String @examples(values: "Measurable #1")
  Id: Int @examples(values: 1060)
  Type: String @examples(values: "AngularMeasurable")
  Key: String @examples(values: "AngularMeasurable_1060")
  Owner: User
  Admin: User
  Target: Int @examples(values: 1)
  AltTarget: Int
  Direction: String @examples(values: ["LessThanOrEqual", "LessThan", "GreaterThan", "EqualTo", "GreaterThanNotEqual", "Between"])
  IsDivider: Boolean @examples(values: false)
  IsReorderable: Boolean @examples(values: true)
  ShowCumulative: Boolean
  Cumulative: Int
  CumulativeRange: String @examples(values: "2019-11-08T03:23:51")
  Modifiers: String @examples(values: ["None", "Dollar", "Percent", "Pound", "Euros"])
  Ordering: Int @examples(values: 0)
  Disabled: Boolean
  Generated: Boolean
  IsFormula: Boolean @examples(values: false)
  Average: Int
  ShowAverage: Boolean @examples(values: false)
  AverageRange: String @examples(values: "2019-11-08T03:23:51")
  Permission: PermissionDto
  Origins: NameId
}

type Score {
  Id: Int @examples(values: 70529)
  Type: String @examples(values: "AngularScore")
  Key: String @examples(values: "AngularScore_70529")
  ForWeek: Int @examples(values: 2587)
  Week: String @examples(values: "2019-07-28T00:00:00Z")
  MeasurableId: Int @examples(values: 1060)
  MeasurableName: String @examples(values: "Measurable #1")
  Origins: NameId
  DateEntered: String @examples(values: "null")
  Measured: Int
  Disabled: Boolean
  Direction: String @examples(values: ["LessThanOrEqual", "LessThan", "GreaterThan", "EqualTo", "GreaterThanNotEqual", "Between"])
  Target: Int @examples(values: 1)
  AltTarget: Int
  OrganizationId: Int @examples(values: 604)
  AccountableUserId: Int @examples(values: 605)
}

type Week {
  Id: Int @examples(values: 637004736000000000)
  Type: String @examples(values: "AngularWeek")
  Key: String @examples(values: "AngularWeek_637004736000000000")
  ForWeekNumber: Int @examples(values: 2588)
  ForWeek: String @examples(values: "019-08-04T00:00:00Z")
  DisplayDate: String @examples(values: "2019-07-27T18:00:00Z")
  LocalDate: String @fake(type: recentDate)
  IsCurrentWeek: Boolean
}

type PermissionDto {
  CanEdit: Boolean
}

type NameId {
  Id: Int
  Name: String @fake(type: fullName)
}

type MeetingNotes {
  Id: Int @examples(values: 18)
  Type: String @examples(values: "AngularMeetingNotes")
  Key: String @examples(values: "AngularMeetingNotes_18")
  DetailsUrl: String @examples(values: "https://notes.traction.tools/p/7febb161-ae81-486d-a766-6807a686cb01?showControls=true&amp;showChat=false")
  Title: String @examples(values: "test Note")
}

type Rock {
  Id: Int @examples(values: 1138)
  Type: String @examples(values: "AngularRock")
  Key: String @examples(values: "AngularRock_1138")
  Name: String @examples(values: "Rock #1")
  Owner: User
  DueDate: String @examples(values: "2020-02-06T03:24:27")
  Complete: Boolean
  Completion: String @examples(values: ["Indeterminate", "AtRisk", "OnTrack", "Complete"])
  CreateTime: String @examples(values: "2019-11-08T03:24:35")
  Archived: Boolean
  Permission: PermissionDto
  Origins: [NameId] @listLength(min: 0, max: 5)
}

type Todo {
  Id: Int @examples(values: 3294)
  Type: String @examples(values: "AngularTodo")
  Key: String @examples(values: "AngularTodo_3294")
  Name: String @examples(values: "To-Do #1")
  DetailsUrl: String @examples(values: "http://env-tractiontools-qa-1.us-west-2.elasticbeanstalk.com/Todo/Pad/3294")
  Origin: String @examples(values: "Test Meeting #1")
  OriginId: Int @examples(values: 493)
  DueDate: String @examples(values: "2019-11-15T15:59:59")
  Owner: User
  CompleteTime: String @examples(values: "Null")
  CreateTime: String @examples(values: "2019-11-08T03:25:24")
  Complete: Boolean @examples(values: 493)
  TodoType: String @examples(values: ["L10", "Personal", "Milestone"])
  Ordering: Int @examples(values: -3294)
  Permission: PermissionDto
}

type Headline {
  Id: Int @examples(values: 270)
  Type: String @examples(values: "AngularHeadline")
  Key: String @examples(values: "AngularHeadline_270")
  Name: String @examples(values: "Headline #1")
  DetailsUrl: String @examples(values: "http://env-tractiontools-qa-1.us-west-2.elasticbeanstalk.com/headlines/pad/270")
  Owner: User
  CloseTime: String @examples(values: "Null")
  CreateTime: String @examples(values: "2019-11-08T03:25:07")
  About: Picture
  Archived: Boolean @examples(values: false)
  Permission: PermissionDto
  Origin: String @examples(values: "Null")
  OriginId: Int @examples(values: 493)
}

type IssuesList {
  Id: Int @examples(values: 493)
  Type: String @examples(values: "AngularIssuesList")
  Key: String @examples(values: "AngularIssuesList_493")
  Issues: [Issue] @listLength(min: 0, max: 5)
  Prioritization: String @examples(values: "Rank")
}

type Page {
  Minutes: Int, @examples(values:[5, 60])
  Title: String @examples(values: ["Segue", "Scorecard", "Rock Review", "People Headlines", "To-do List", "IDS", "Conclude", "Title Page", "Notes Box", "External Page"])
  Type: String @examples(values: ["Segue", "Scorecard", "Rock Review", "People Headlines", "To-do List", "IDS", "Conclude", "Title Page", "Notes Box", "External Page"])
}

type Picture {
  Id: Int @examples(values: -270)
  Type: String @examples(values: "AngularPicture")
  Key: String @examples(values: "AngularPicture_-270")
  ImageUrl: String @examples(values: "https://s3.amazonaws.com/Radial/placeholder/orgPlaceholder.png")
  Name: String @examples(values: Null)
  Initials: String @examples(values: Null)
}

type Issue{
  Name: String @fake(type: fullName)
  Id: Int @examples(values: [786, 787])
  Type: String @examples(values: "AngularIssue")
  Key: String @examples(values: ["AngularIssue_786", "AngularIssue_787"])
  Owner: User
  DetailsUrl: String @examples(values: "http://env-tractiontools-qa-1.us-west-2.elasticbeanstalk.com/Issues/Pad/700")
  Complete: Boolean
  CreateTime: String @examples(values: "2019-11-08T11:25:50")
  CloseTime: String @examples(values: Null)
  Origin: String @examples(values: "Test Meeting #1")
  OriginId: Int @examples(values: 493)
  Permission: PermissionDto
}
  
type LocalDateTime {
  Local: Boolean
  Date: String @fake(type:recentDate)
}


type Query {
  meeting(Id: Int, meetingType: String): Meeting
  allMeetings: [Meeting] @listLength(min:1,max:10)
}

type Mutation_response {
  affected_rows: Int @examples(values: [1])
}

type Mutation {
  CreateMeeting(title: String!): Meeting
  DeleteMeeting(Id: Int!): Mutation_response
  AddRocks(meetingId: Int!, title: String!): Mutation_response
  DeleteRocks(meetingId: Int!): Mutation_response
  AddTodos(meetingId: Int!, title: String!): Mutation_response
  DeleteTodos(meetingId: Int!): Mutation_response
  AddIssues(meetingId: Int!, title: String!): Mutation_response
  DeleteIssues(meetingId: Int!): Mutation_response
  AddAttendees(meetingId: Int!, title: String!): Mutation_response
  DeleteAttendees(meetingId: Int!): Mutation_response
  AddPeopleHeadline(meetingId: Int!, title: String!): Mutation_response
  DeletePeopleHeadline(meetingId: Int!): Mutation_response
  
}

schema {
  query: Query
  mutation: Mutation
}